syntax = "proto3";

package pkg.api.gophkeeper.v1;

import "google/protobuf/empty.proto";
import "buf/validate/validate.proto";

option go_package = "github.com/kripsy/GophKeeper/pkg/api/GophKeeper";

// GophKeeperService provides secure store.
service GophKeeperService {
  rpc Register(AuthRequest) returns (AuthResponse);
  rpc Login(AuthRequest) returns (AuthResponse);
  rpc MultipartUploadFile(stream MultipartUploadFileRequest)
      returns (MultipartUploadFileResponse);
  rpc BlockStore(stream BlockStoreRequest) returns (BlockStoreResponse);
  rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc MultipartDownloadFile(MultipartDownloadFileRequest)
      returns (stream MultipartDownloadFileResponse);
}

message AuthRequest {
  string username = 1 [ (buf.validate.field).string.min_len = 1 ];
  string password = 2 [ (buf.validate.field).string.min_len = 1 ];
}
message AuthResponse {
  string token = 1 [ (buf.validate.field).string.min_len = 1 ];
}

message MultipartUploadFileRequest {
  bytes content = 1;
  string file_name = 2 [ (buf.validate.field).string.min_len = 1 ];
  string guid = 3 [ (buf.validate.field).string.min_len = 1 ];
  string hash = 4 [ (buf.validate.field).string.min_len = 1 ];
}

message MultipartUploadFileResponse { string fileId = 1; }

message MultipartDownloadFileRequest {
  string file_name = 1 [ (buf.validate.field).string.min_len = 1 ];
  string hash = 2 [ (buf.validate.field).string.min_len = 1 ];
  string guid = 3 [ (buf.validate.field).string.min_len = 1 ];
}

message MultipartDownloadFileResponse {
  bytes content = 1;
  string file_name = 2 [ (buf.validate.field).string.min_len = 1 ];
  string hash = 3 [ (buf.validate.field).string.min_len = 1 ];
  string guid = 4 [ (buf.validate.field).string.min_len = 1 ];
}

message BlockStoreRequest {
  string guid = 1 [ (buf.validate.field).string.min_len = 1 ];
  bool is_finish = 2;
}

message BlockStoreResponse { string status = 1; }
